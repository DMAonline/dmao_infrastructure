
# DMAOnline nginx/openresty API configuration. version 0.2

server {
    listen 8080;
    server_name localhost;
    limit_conn perip 10;
    limit_conn perserver 100;
    gzip on;
    gzip_min_length 4096;
    set $max_rows 5000;
    set $default_fmt "json";

    add_header Access-Control-Allow-Origin *;
    set $rcuk_funder_list "('ahrc', 'bbsrc', 'epsrc',
                            'esrc', 'mrc', 'nerc', 'stfc')";
    set $base_url "http://lib-ldiv.lancs.ac.uk:8080/dmaonline/v0.2";

    location /dmaonline/dashboard {
        root /var/www/html;
        index index.html;
    }

    location /dmaonline/assets {
        root /var/www/html;
        index index.html;
    }

    location /dbmodel {
        root /var/www/html;
        index index.html;
    }

    location /database.sql {
        root /home/ldiv_admin/dmaonline;
        index database.sql;
    }

    location /nginx_dmaonline.conf {
        root /home/ldiv_admin/dmaonline/openresty;
        index nginx_dmaonline.conf;
    }

    location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        allow 148.88.211.0/24;
        deny all;
    }

    location ~* /dmaonline/lua_test/insert/(?<inst_id>\w+)/(?<object>\w+) {
        content_by_lua_file
            "/usr/local/openresty/lualib/resty/post_form_data.lua";
    }

    location ~* /dmaonline/v0\.2/datasets/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        set $project_null_dates "or p.${arg_date} is null";
        set $funder_id_filter_sql "";
        if ($arg_filter = "rcuk") {
            set $funder_id_filter_sql
                "where funder_id in $rcuk_funder_list";
            set $project_null_dates "";
        }
        set $order_sql "order by d.dataset_id asc";
        set $column_list_sql "
            f.funder_id,
            f.name funder_name,
            d.*,
            fac.abbreviation lead_faculty_abbrev,
            fac.name lead_faculty_name,
            dept.abbreviation lead_dept_abbrev,
            dept.name lead_dept_name,
            p.project_awarded,
            p.project_start,
            p.project_end,
            p.project_name
        ";
        if ($arg_count = "true") {
            set $order_sql "";
            set $column_list_sql "count(*) num_datasets";
        }
        postgres_escape $e_sd $arg_sd;
        postgres_escape $e_ed $arg_ed;
        postgres_escape $e_date $arg_date;
        set $date_filter_sql "";
        if ($arg_date ~* ".") {
            set $date_filter_sql "
                and (
                    p.${arg_date} >= $e_sd
                    and p.${arg_date} <= $e_ed
                    $project_null_dates
                )
            ";
        }
        postgres_escape $e_dataset_id $arg_dataset_id;
        set $dataset_filter_sql "";
        if ($arg_dataset_id ~* ".") {
            set $dataset_filter_sql "and d.dataset_id = $e_dataset_id";
        }
        postgres_escape $e_project_id $arg_project_id;
        set $project_filter_sql "";
        if ($arg_project_id ~* ".") {
            set $project_filter_sql "and d.project_id = $e_project_id";
        }
        postgres_escape $e_arch_status $arg_arch_status;
        set $arch_status_filter_sql "";
        if ($arg_arch_status ~* ".") {
            set $arch_status_filter_sql
                "and d.inst_archive_status = $e_arch_status";
        }
        postgres_escape $e_location $arg_location;
        set $location_filter_sql "";
        if ($arg_location ~* ".") {
            set $location_filter_sql
                "and d.storage_location = $e_location";
        }
        postgres_escape $e_project_id $arg_project_id;
        set $project_filter_sql "";
        if ($arg_project_id ~* ".") {
            set $project_filter_sql "and d.project_id = $e_project_id";
        }
        postgres_escape $e_faculty $arg_faculty;
        set $faculty_filter_sql "";
        if ($arg_faculty ~* ".") {
            set $faculty_filter_sql
                "and d.lead_faculty_id = $e_faculty";
        }
        postgres_escape $e_dept $arg_dept;
        set $dept_filter_sql "";
        if ($arg_dept ~* ".") {
            set $dept_filter_sql
                "and d.lead_department_id = $e_dept";
        }

        postgres_query HEAD GET "
            select
                $column_list_sql
            from
                dataset d
            left outer join
                funder_ds_map fdm
            on
                (d.dataset_id = fdm.dataset_id)
            left outer join
                funder f
            on
                (fdm.funder_id = f.funder_id)
            left outer join
                faculty fac
            on
                (d.lead_faculty_id = fac.faculty_id)
            left outer join
                department dept
            on
                (d.lead_department_id = dept.department_id)
            left outer join
                project p
            on
                (d.project_id = p.project_id)
            where (
                d.dataset_id in (
                    select
                        dataset_id
                    from
                        funder_ds_map
                    $funder_id_filter_sql
                )
            and
                d.dataset_id in (
                    select
                        dataset_id
                    from
                        inst_ds_map
                    where
                        inst_id = $e_inst_id
                )
            )
        $arch_status_filter_sql
        $date_filter_sql
        $dataset_filter_sql
        $location_filter_sql
        $faculty_filter_sql
        $dept_filter_sql
        $project_filter_sql
        $order_sql
        ";
    }

    location ~* /dmaonline/v0\.2/project_dmps/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        postgres_escape $e_sd $arg_sd;
        postgres_escape $e_ed $arg_ed;
        postgres_escape $e_date $arg_date;
        set $order_sql "order by p.project_id asc";
        set $column_list_sql "
            p.*,
            f.abbreviation lead_faculty_abbrev,
            f.name lead_faculty_name,
            d.abbreviation lead_dept_abbrev,
            d.name lead_dept_name
        ";
        if ($arg_count = "true") {
            set $order_sql "";
            set $column_list_sql "count(*) num_project_dmps";
        }
        set $date_filter_sql "";
        if ($arg_date ~* ".") {
            set $date_filter_sql "and p.${arg_date} >= $e_sd
                                  and p.${arg_date} <= $e_ed";
        }
        postgres_escape $e_project_id $arg_project_id;
        set $project_filter_sql "";
        if ($arg_project_id ~* ".") {
            set $project_filter_sql "and p.project_id = $e_project_id";
        }
        postgres_escape $e_faculty $arg_faculty;
        set $faculty_filter_sql "";
        if ($arg_faculty ~* ".") {
            set $faculty_filter_sql
                "and p.lead_faculty_id = $e_faculty";
        }
        postgres_escape $e_dept $arg_dept;
        set $dept_filter_sql "";
        if ($arg_dept ~* ".") {
            set $dept_filter_sql
                "and p.lead_department_id = $e_dept";
        }
        postgres_escape $e_has_dmp $arg_has_dmp;
        set $has_dmp_sql "";
        if ($arg_has_dmp = "true") {
            set $has_dmp_sql "and p.has_dmp";
        }
        if ($arg_has_dmp = "false") {
            set $has_dmp_sql "and not p.has_dmp";
        }
        postgres_escape $e_dmp_reviewed $arg_dmp_reviewed;
        set $dmp_reviewed_sql "";
        if ($arg_dmp_reviewed ~* ".") {
            set $dmp_reviewed_sql
                "and p.has_dmp_been_reviewed = $e_dmp_reviewed";
        }
        postgres_escape $e_is_awarded $arg_is_awarded;
        set $is_awarded_sql "";
        if ($arg_is_awarded = "true") {
            set $is_awarded_sql "and p.is_awarded";
        }
        if ($arg_is_awarded = "false") {
            set $is_awarded_sql "and not p.is_awarded";
        }

        postgres_query HEAD GET "
            select
                $column_list_sql
            from
                project p
            join
                faculty f
            on
                (p.lead_faculty_id = f.faculty_id)
            join
                department d
            on
                (p.lead_department_id = d.department_id)
            where
                p.inst_id = $e_inst_id
            $date_filter_sql
            $faculty_filter_sql
            $dept_filter_sql
            $project_filter_sql
            $has_dmp_sql
            $dmp_reviewed_sql
            $is_awarded_sql
            $order_sql
        ";
    }

    location ~* /dmaonline/v0\.2/dmp_status/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        postgres_escape $e_sd $arg_sd;
        postgres_escape $e_ed $arg_ed;
        postgres_escape $e_date $arg_date;
        set $project_null_dates "or p.${arg_date} is null";
        set $project_null_dates "";
        set $order_sql "order by p.project_id asc";
        set $column_list_sql "
            p.*,
            fpm.funder_id funder_id,
            dmp.dmp_ss_pid dmp_source_system_id,
            dmp.dmp_stage,
            dmp.dmp_status
        ";
        if ($arg_count = "true") {
            set $order_sql "";
            set $column_list_sql "count(*) num_dmp_status";
        }
        set $date_filter_sql "";
        if ($arg_date ~* ".") {
            set $date_filter_sql
                "and (p.${arg_date} >= $e_sd
                 and p.${arg_date} <= $e_ed
                 $project_null_dates)";
        }
        postgres_escape $e_project_id $arg_project_id;
        set $project_filter_sql "";
        if ($arg_project_id ~* ".") {
            set $project_filter_sql "and p.project_id = $e_project_id";
        }
        postgres_escape $e_faculty $arg_faculty;
        set $faculty_filter_sql "";
        if ($arg_faculty ~* ".") {
            set $faculty_filter_sql
                "and p.lead_faculty_id = $e_faculty";
        }
        postgres_escape $e_dept $arg_dept;
        set $dept_filter_sql "";
        if ($arg_dept ~* ".") {
            set $dept_filter_sql
                "and p.lead_department_id = $e_dept";
        }
        set $dmp_stage_filter_sql "";
        postgres_escape $e_dmp_stage $arg_dmp_stage;
        if ($arg_dmp_stage ~* ".") {
            set $dmp_stage_filter_sql
                "and dmp.dmp_stage = $e_dmp_stage";
        }
        set $dmp_status_filter_sql "";
        postgres_escape $e_dmp_status $arg_dmp_status;
        if ($arg_dmp_status ~* ".") {
            set $dmp_status_filter_sql
                "and dmp.dmp_status = $e_dmp_status";
        }
        set $has_dmp_filter_sql "";
        postgres_escape $e_has_dmp $arg_has_dmp;
        if ($arg_has_dmp ~* ".") {
            set $has_dmp_filter_sql
                "and p.has_dmp = $e_has_dmp";
        }
        set $has_dmp_been_reviewed_filter_sql "";
        postgres_escape $e_has_dmp_been_reviewed $arg_has_dmp_been_reviewed;
        if ($arg_has_dmp_been_reviewed ~* ".") {
            set $has_dmp_been_reviewed_filter_sql
                "and p.has_dmp_been_reviewed = $e_has_dmp_been_reviewed";
        }

        postgres_query HEAD GET "
            select
                $column_list_sql
            from
                project p
            left outer join
                funder_project_map fpm
            on
                (p.project_id = fpm.project_id)
            left outer join
                dmp
            on
                (p.dmp_id = dmp.dmp_id)
            where
                p.inst_id = $e_inst_id
            $date_filter_sql
            $project_filter_sql
            $faculty_filter_sql
            $dept_filter_sql
            $dmp_stage_filter_sql
            $dmp_status_filter_sql
            $has_dmp_filter_sql
            $has_dmp_been_reviewed_filter_sql
            $order_sql
        ";
    }

    rewrite /dmaonline/v0.2/expected_storage/(?<inst_id>\w+)
        /dmaonline/v0.2/storage/$inst_id/$args permanent;
    location ~* /dmaonline/v0\.2/storage/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        postgres_escape $e_sd $arg_sd;
        postgres_escape $e_ed $arg_ed;
        postgres_escape $e_date $arg_date;
        set $order_sql "order by p.project_id asc, d.dataset_id asc";
        set $column_list_sql "
            p.project_id,
            p.project_awarded,
            p.project_start,
            p.project_end,
            p.project_name,
            p.lead_faculty_id,
            p.lead_department_id,
            p.expected_storage,
            d.dataset_id,
            d.dataset_pid,
            d.dataset_size,
            s.description storage_platform,
            s.storage_cost expected_storage_cost
        ";
        if ($arg_count = "true") {
            set $order_sql "";
            set $column_list_sql "count(*) num_expected_storage";
        }
        if ($arg_sum_expected = "true") {
            set $order_sql "";
            set $column_list_sql
                "sum(p.expected_storage) sum_expected_storage";
        }
        if ($arg_sum_size = "true") {
            set $order_sql "";
            set $column_list_sql
                "sum(d.dataset_size) sum_dataset_size";
        }
        set $date_filter_sql "";
        if ($arg_date ~* ".") {
            set $date_filter_sql "and p.${arg_date} >= $e_sd
                                  and p.${arg_date} <= $e_ed";
        }
        postgres_escape $e_project_id $arg_project_id;
        set $project_filter_sql "";
        if ($arg_project_id ~* ".") {
            set $project_filter_sql "and p.project_id = $e_project_id";
        }
        postgres_escape $e_faculty $arg_faculty;
        set $faculty_filter_sql "";
        if ($arg_faculty ~* ".") {
            set $faculty_filter_sql
                "and p.lead_faculty_id = $e_faculty";
        }
        postgres_escape $e_dept $arg_dept;
        set $dept_filter_sql "";
        if ($arg_dept ~* ".") {
            set $dept_filter_sql
                "and p.lead_department_id = $e_dept";
        }
        postgres_escape $e_dataset_id $arg_dataset_id;
        set $dataset_filter_sql "";
        if ($arg_dataset_id ~* ".") {
            set $dataset_filter_sql
                "and d.dataset_id = $e_dataset_id";
        }

        postgres_query HEAD GET "
            select
                $column_list_sql
            from
                project p
            left outer join
                dataset d
            on
                (p.project_id = d.project_id)
            join
                project_expected_storage_costs s
            on
                (p.project_id = s.project_id)
            where
                p.inst_id = $e_inst_id
            $date_filter_sql
            $project_filter_sql
            $faculty_filter_sql
            $dept_filter_sql
            $dataset_filter_sql
            $order_sql
        ";
    }

    location ~* /dmaonline/v0\.2/rcuk_as/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        set $faculty_sql "";
        if ($arg_faculty ~* ".") {
            set $faculty_sql "and pub.lead_faculty_id = $arg_faculty";
        }
        set $dept_sql "";
        if ($arg_dept ~* ".") {
            set $dept_sql "and pub.lead_department_id = $arg_dept";
        }
        set $project_id_sql "";
        if ($arg_project_id ~* ".") {
            set $project_id_sql "and pub.project_id = $arg_project_id";
        }
        postgres_escape $e_funder_project_code $arg_funder_project_code;
        if ($arg_funder_project_code ~* ".") {
            set $funder_project_code_sql
                "and pub.funder_project_code = $e_funder_project_code";
        }
        postgres_escape $e_funder_id $arg_funder_id;
        if ($arg_funder_id ~* ".") {
            set $funder_id_sql "and fpm.funder_id = $e_funder_id";
        }
        postgres_escape $e_sd $arg_sd;
        postgres_escape $e_ed $arg_ed;
        set $date_filter_sql "";
        if ($arg_dr_type ~* ".") {
            set $date_filter_sql "and $arg_dr_type >= $e_sd
                                  and $arg_dr_type <= $e_ed";
        }
        set $column_list_sql "
            pub.*,
            fpm.funder_id,
            f.name funder_name,
            proj.project_name,
            proj.project_awarded,
            proj.project_start,
            proj.project_end";
        set $order_sql "order by pub.publication_id asc";
        if ($arg_count ~* "true") {
            set $column_list_sql "count(*) num_pubs";
            set $order_sql "";
        }
        if ($arg_count !~* "true") {
        }

        postgres_query HEAD GET "
            select
                $column_list_sql
            from
                publication pub
            join
                funder_pub_map fpm
            on
                (
                    pub.publication_id = fpm.publication_id
                    and
                    pub.lead_inst_id = $e_inst_id
                )
            join
                funder f
            on
                (f.funder_id = fpm.funder_id)
            left outer join
                project proj
            on
               (pub.project_id = proj.project_id)
            where
                fpm.funder_id in $rcuk_funder_list
            $faculty_sql
            $dept_sql
            $project_id_sql
            $funder_project_code_sql
            $funder_id_sql
            $date_filter_sql
            $order_sql
        ";
    }

    location ~* /dmaonline/v0\.2/dataset_accesses/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        postgres_escape $e_summary $arg_summary;
        set $summary_clause "d.access_date, d.counter";
        set $group_by_clause "";
        set $summary_column "d.dataset_id,";
        set $order_clause
            "order by d.access_date, d.dataset_id asc, d.access_type asc";
        if ($arg_summary = "true") {
            set $summary_column "d.dataset_id,";
            set $summary_clause "sum(d.counter)";
            set $group_by_clause "group by d.dataset_id, d.access_type";
            set $order_clause "order by d.dataset_id, d.access_type asc";
        }
        if ($arg_summary_by_date = "true") {
            set $summary_column "d.access_date,";
            set $summary_clause "sum(d.counter)";
            set $group_by_clause "group by d.access_date, d.access_type";
            set $order_clause "order by d.access_date, d.access_type asc";
        }
        postgres_escape $e_dataset_id $arg_dataset_id;
        postgres_escape $e_sd $arg_sd;
        postgres_escape $e_ed $arg_ed;
        set $dataset_id_filter_sql "";
        set $date_range_filter_sql "";
        set $and_clause_1 "";
        set $and_clause_2 "";
        set $args_test "";
        if ($arg_dataset_id ~* ".") {
            set $args_test "I";
            set $dataset_id_filter_sql "d.dataset_id = $e_dataset_id";
        }
        if ($arg_sd ~* ".") {
            set $args_test "${args_test}D";
            set $date_range_filter_sql "d.access_date >= $e_sd
                                        and d.access_date <= $e_ed";
        }
        if ($args_test = "I") {
            set $and_clause_1 "and";
        }
        if ($args_test = "D") {
            set $and_clause_1 "and";
        }
        if ($args_test = "ID") {
            set $and_clause_1 "and";
            set $and_clause_2 "and";
        }
        set $faculty_filter_sql "";
        postgres_escape $e_faculty_id $arg_faculty;
        if ($arg_faculty ~* ".") {
            set $faculty_filter_sql "
                and d.dataset_id in
                (
                    select dataset_id
                    from dataset_faculty_map
                    where faculty_id = $e_faculty_id
                )
            ";
        }

        postgres_query HEAD GET "
            select
                $summary_column
                d.access_type,
                $summary_clause
            from
                dataset_accesses d
            where d.dataset_id in (
                select dataset_id from inst_ds_map
                where inst_id = $e_inst_id
            )
            $and_clause_1
            $dataset_id_filter_sql
            $and_clause_2
            $date_range_filter_sql
            $faculty_filter_sql
            $group_by_clause
            $order_clause
        ";
    }

    location ~* /dmaonline/v0\.2/institution/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;

        postgres_query HEAD GET "
            select * from institution
            where inst_id = $e_inst_id
        ";

        postgres_query DELETE "
            delete from institution where inst_id = $e_inst_id;
        ";
        postgres_rewrite DELETE no_changes 410;
        postgres_rewrite DELETE changes 204;
    }

    location ~* /dmaonline/v0\.2/institution {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $arg_inst_id;
        set_unescape_uri $e_inst_id $e_inst_id;
        postgres_escape $e_name $arg_name;
        set_unescape_uri $e_name $e_name;
        postgres_escape $e_contact $arg_contact;
        set_unescape_uri $e_contact $e_contact;
        postgres_escape $e_contact_email $arg_email;
        set_unescape_uri $e_contact_email $e_contact_email;
        postgres_escape $e_contact_phone $arg_phone;
        set_unescape_uri $e_contact_phone $e_contact_phone;
        postgres_escape $e_cris_sys $arg_cris_sys;
        set_unescape_uri $e_cris_sys $e_cris_sys;
        postgres_escape $e_pub_sys $arg_pub_sys;
        set_unescape_uri $e_pub_sys $e_pub_sys;
        postgres_escape $e_dataset_sys $arg_dataset_sys;
        set_unescape_uri $e_dataset_sys $e_dataset_sys;
        postgres_escape $e_archive_sys $arg_archive_sys;
        set_unescape_uri $e_archive_sys $e_archive_sys;
        postgres_escape $e_currency $arg_currency;
        set_unescape_uri $e_currency $e_currency;
        postgres_escape $e_currency_symbol $arg_currency_symbol;
        set_unescape_uri $e_currency_symbol $e_currency_symbol;

        postgres_query HEAD GET "
            select * from institution
            order by inst_id asc
        ";

        postgres_query POST "
            insert into institution(
                inst_id,
                name,
                contact,
                contact_email,
                contact_phone,
                cris_sys,
                pub_sys,
                dataset_sys,
                archive_sys,
                currency,
                currency_symbol
            )
            values (
                $e_inst_id,
                $e_name,
                $e_contact,
                $e_contact_email,
                $e_contact_phone,
                $e_cris_sys,
                $e_pub_sys,
                $e_dataset_sys,
                $e_archive_sys,
                $e_currency,
                $e_currency_symbol
            )
            returning *
        ";
        postgres_rewrite POST changes 201;
    }

    location ~* /dmaonline/v0\.2/faculty/(?<inst_id>\w+)/(?<faculty_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        postgres_escape $e_faculty_id $faculty_id;
        postgres_escape $e_name $arg_name;
        set_unescape_uri $e_name $e_name;
        postgres_escape $e_abbrev $arg_abbrev;
        set_unescape_uri $e_abbrev $e_abbrev;
        postgres_query HEAD GET "
            select * from faculty
            where faculty_id = $e_faculty_id
            and inst_id = $e_inst_id;
        ";

        set $name_sql "";
        set $args_test "";
        if ($arg_name ~* ".") {
            set $args_test "N";
            set $name_sql "name = $e_name";
        }
        set $abbrev_sql "";
        if ($arg_abbrev ~* ".") {
            set $args_test "${args_test}A";
            set $abbrev_sql "abbreviation = $e_abbrev";
        }
        if ($args_test = "NA") {
            set $name_sql "${name_sql},";
        }

        postgres_query PUT "
            update
                faculty
            set
                $name_sql
                $abbrev_sql
            where
                inst_id = $e_inst_id
            and
                faculty_id = $e_faculty_id
            returning *
        ";
        postgres_rewrite PUT no_changes 410;
        postgres_rewrite changes 204;

        postgres_query DELETE "
            delete from faculty f where
             f.inst_id = $e_inst_id and f.faculty_id = $e_faculty_id;
        ";
        postgres_rewrite DELETE no_changes 410;
        postgres_rewrite DELETE changes 204;
    }

    location ~* /dmaonline/v0\.2/faculty/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        postgres_escape $e_inst_id $inst_id;
        set_unescape_uri $e_inst_id $e_inst_id;
        postgres_escape $e_name $arg_name;
        set_unescape_uri $e_name $e_name;
        postgres_escape $e_abbrev $arg_abbrev;
        set_unescape_uri $e_abbrev $e_abbrev;
        rds_json on;
        postgres_query HEAD GET "
            select
                f.faculty_id,
                f.inst_id,
                f.name faculty_name,
                f.abbreviation faculty_abbreviation,
                i.name inst_name
            from
                faculty f
            join
                institution i
            on
                (f.inst_id = i.inst_id)
            where
                f.inst_id = $e_inst_id
            order by
                f.faculty_id asc
        ";

        postgres_query POST "
            insert into faculty (
                inst_id,
                name,
                abbreviation
            )
            values (
                $e_inst_id,
                $e_name,
                $e_abbrev
            )
            returning *
        ";
        postgres_rewrite POST changes 201;
    }

    location ~* /dmaonline/v0\.2/depts/(?<inst_id>\w+) {
        postgres_pass DMAonline;
        rds_json on;
        postgres_escape $e_inst_id $inst_id;
        postgres_escape $e_faculty_id $arg_faculty_id;
        set $faculty_sql "";
        if ($arg_faculty_id ~* ".") {
            set $faculty_sql "and f.faculty_id = $e_faculty_id";
        }
        postgres_query HEAD GET "
            select
                d.department_id,
                d.inst_id,
                d.name department_name,
                d.abbreviation department_abbreviation,
                f.faculty_id,
                f.name faculty_name,
                i.inst_id,
                i.name inst_name
            from
                department d
            join
                faculty f
            on
                (d.faculty_id = f.faculty_id)
            join
                institution i
            on
                (d.inst_id = i.inst_id)
            where
                f.inst_id = $e_inst_id
            $faculty_sql
            order by
                d.department_id
        ";

        postgres_escape $e_name $arg_name;
        set_unescape_uri $e_name $e_name;
        postgres_escape $e_abbrev $arg_abbrev;
        set_unescape_uri $e_abbrev $e_abbrev;
        postgres_query POST "
           insert into
                department (
                    inst_id,
                    faculty_id,
                    name,
                    abbreviation
                )
            values (
                $e_inst_id,
                $e_faculty_id,
                $e_name,
                $e_abbrev
            )
            returning *
        ";
        postgres_rewrite POST changes 201;
    }

}
